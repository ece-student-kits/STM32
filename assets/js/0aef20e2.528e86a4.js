"use strict";(self.webpackChunkstm_32_documentaion=self.webpackChunkstm_32_documentaion||[]).push([[88],{2040:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=t(4848),i=t(8453);const o={},r="Basics: ButtonLED",c={id:"Basics/ButtonLED",title:"Basics: ButtonLED",description:"Task: Toggle inbuilt 'LED' on 'USER BUTTON' press",source:"@site/docs/Basics/ButtonLED.md",sourceDirName:"Basics",slug:"/Basics/ButtonLED",permalink:"/STM32/docs/Basics/ButtonLED",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Basics/ButtonLED.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basics: BlinkLed",permalink:"/STM32/docs/Basics/BlinkLed"},next:{title:"Basics: SerialMonitor",permalink:"/STM32/docs/Basics/Serial"}},l={},d=[{value:"Step 1: Create a STM32 Project &quot;ButtonLED&quot;",id:"step-1-create-a-stm32-project-buttonled",level:3},{value:"Step 2: Configure GPIO Pins",id:"step-2-configure-gpio-pins",level:3},{value:"GPIO Pin Details:",id:"gpio-pin-details",level:4},{value:"Step 3: Code Snippet for Button Press and LED Toggling",id:"step-3-code-snippet-for-button-press-and-led-toggling",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"basics-buttonled",children:"Basics: ButtonLED"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Task: Toggle inbuilt 'LED' on 'USER BUTTON' press"})}),"\n",(0,s.jsx)(n.h3,{id:"step-1-create-a-stm32-project-buttonled",children:'Step 1: Create a STM32 Project "ButtonLED"'}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"step-2-configure-gpio-pins",children:"Step 2: Configure GPIO Pins"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://wiki.st.com/stm32mcu/wiki/STM32StepByStep:Step2_Blink_LED",children:"Docs"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Image",src:t(7708).A+"",width:"439",height:"389"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PA5"})," as ",(0,s.jsx)(n.code,{children:"GPIO_OUTPUT"})," (Inbuilt LED)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PC13"})," as ",(0,s.jsx)(n.code,{children:"GPIO_INPUT"})," (User Button)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"(Already configured when initialized the pheripherals in default configuration)"}),"\n",(0,s.jsx)(n.h4,{id:"gpio-pin-details",children:"GPIO Pin Details:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Inbuilt LED"}),": Port A, GPIO Pin 5"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Button"}),": Port C, GPIO Pin 13"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"step-3-code-snippet-for-button-press-and-led-toggling",children:"Step 3: Code Snippet for Button Press and LED Toggling"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"!HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13)"})," - Function to Read status of GPIO Pin"]}),"\n",(0,s.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,s.jsx)(n.code,{children:"while(1)"})," loop in ",(0,s.jsx)(n.code,{children:"main.c"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"// Check if the user button (PC13) is pressed\r\nif (!HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13)) {\r\n\r\n    // Toggle the LED (PA5)\r\n    HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);\r\n    HAL_Delay(100);   // Insert delay of 100 ms\r\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": The USER BUTTON is in PULL-UP Mode by default, so we use negative logic in 'IF condition'"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},7708:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/1-5f2944f0f6d519f41fe31a4834873d6a.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);