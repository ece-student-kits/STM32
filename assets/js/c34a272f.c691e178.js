"use strict";(self.webpackChunkstm_32_documentaion=self.webpackChunkstm_32_documentaion||[]).push([[305],{2590:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=s(4848),t=s(8453);const r={},o="DigitalSensors: IR_LED",c={id:"IR_LED/IR_LED",title:"DigitalSensors: IR_LED",description:"Task: Interface an IR Sensor and light up LED if object is detected",source:"@site/docs/IR_LED/IR_LED.md",sourceDirName:"IR_LED",slug:"/IR_LED/",permalink:"/STM32/docs/IR_LED/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IR_LED/IR_LED.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basics: SerialMonitor",permalink:"/STM32/docs/Basics/Serial"},next:{title:"AnalogSensors: LM35",permalink:"/STM32/docs/LM35/"}},l={},d=[{value:"STEPS:",id:"steps",level:2},{value:"Step 1: Create a STM32 Project &quot;IR_LED&quot;",id:"step-1-create-a-stm32-project-ir_led",level:3},{value:"Step 2: Configure GPIO Pins",id:"step-2-configure-gpio-pins",level:3},{value:"GPIO Pin Details:",id:"gpio-pin-details",level:4},{value:"Step 3: Code Snippet for Button Press and LED Toggling",id:"step-3-code-snippet-for-button-press-and-led-toggling",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"digitalsensors-ir_led",children:"DigitalSensors: IR_LED"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Task: Interface an IR Sensor and light up LED if object is detected"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Image",src:s(7643).A+"",width:"439",height:"314"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Pinout:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Pin 1"})," ",(0,i.jsx)(n.strong,{children:"VCC"})," (+5V)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Pin 2"})," ",(0,i.jsx)(n.strong,{children:"DigitalOut"})," (Connected to PA6 [D12])"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Pin 3"})," ",(0,i.jsx)(n.strong,{children:"GND"})," (Ground)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"steps",children:"STEPS:"}),"\n",(0,i.jsx)(n.h3,{id:"step-1-create-a-stm32-project-ir_led",children:'Step 1: Create a STM32 Project "IR_LED"'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create a new project & initialize all pheripherals in default configuration"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-2-configure-gpio-pins",children:"Step 2: Configure GPIO Pins"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://wiki.st.com/stm32mcu/wiki/STM32StepByStep:Step2_Blink_LED",children:"Docs"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Image",src:s(7732).A+"",width:"882",height:"316"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PA5"})," as ",(0,i.jsx)(n.code,{children:"GPIO_OUTPUT"})," (Inbuilt LED) [D13]"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PA6"})," as ",(0,i.jsx)(n.code,{children:"GPIO_INPUT"})," (IR_Sensor Value) [D12]"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"gpio-pin-details",children:"GPIO Pin Details:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inbuilt LED"}),": Port A, GPIO Pin 5"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IR Sensor"}),": Port A, GPIO Pin 6"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-3-code-snippet-for-button-press-and-led-toggling",children:"Step 3: Code Snippet for Button Press and LED Toggling"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6)"})," - Function to Read status of GPIO Pin"]}),"\n",(0,i.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,i.jsx)(n.code,{children:"while(1)"})," loop in ",(0,i.jsx)(n.code,{children:"main.c"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"// Check if the user button (PC13) is pressed\r\nif(!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6))\r\n    //Make Pin HIGH\r\n    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5,GPIO_PIN_SET);\r\nelse\r\n    //Make Pin LOW\r\n    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5,GPIO_PIN_RESET);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},7732:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/3-ac5727ad14456f5f2ab2a644d3913379.png"},7643:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/4-acc637e8ce1aa5ba6d5153b4b317b0bc.png"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);